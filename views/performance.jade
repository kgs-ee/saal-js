extends layout

block vars

block content

    .container-fluid
    
        .row
            .event-banner.carousel.slide(id='front-carousel')
                .carousel-inner(role='listbox')
                    if op.get(performance, 'photo.file')
                        figure(id='slide-'+op.get(performance, 'id')+'' style='background-image: url(' + op.get(performance, 'photo-big.file') + ');')
                    else
                        figure(id='slide-'+op.get(performance, 'id')+'' style='background-image:url("/images/placeholder.jpg");')
                    header.col-md-8
                        if op.get(performance, lang + '-supertitle', '')
                            p= op.get(performance, lang + '-supertitle', '')
                        h1
                            if op.get(performance, 'artist', '')
                                span.artist= op.get(performance, 'artist', '')
                            
                            if op.get(performance, 'producer', '')    
                                span.producer= op.get(performance, 'producer', '')
                            
                            if op.get(performance, 'town', '')    
                                span.town= op.get(performance, 'town', '')
                                
                        h1= op.get(performance, lang + '-name', '')
                        
                        if op.get(performance, lang + '-subtitle', '')
                            p= op.get(performance, lang + '-subtitle', '')

                    ul.event-categories
                        each rootCategory in rootCategories
                            li.text-uppercase.h3(class=(rootCategory.checked ? "" : "unactive"))
                                span
                                    a(href='search?q=category:' + op.get(rootCategory, ['id'], t('Jon Doe')))= op.get(rootCategory, [lang+'-name'], t('Jon Doe'))

                    //- Gradient Map for images
                    script.
                        var slide#{id} = document.getElementById('slide-#{id}');
                        var gradientMap = '#{SAAL.secondary_color}, #{SAAL.main_color}';

                        GradientMaps.applyGradientMap(slide#{id}, gradientMap); 

        .row.front-page-margin
            aside.video-sound.col-md-12.col-lg-3
                if op.get(performance, lang + '-technical-information')
                    .meta-info!= op.get(performance, lang + '-technical-information') 

            article.readMore.main-text.col-md-8.col-lg-6.h3!= op.get(performance, lang + '-description')

            aside.col-md-4.col-lg-3
                if events.length
                    .tickets.row
                        each event in events
                            .col-xs-4.col-md-4.col-lg-4
                                p= (moment(op.get(event, ['start-time'])).locale(lang).format('dddd'))
                                p= (moment(op.get(event, ['start-time'])).locale(lang).format('L'))
                                p= (moment(op.get(event, ['start-time'])).locale(lang).format('HH:mm'))

                            .col-xs-3.col-md-3.col-lg-3
                                p= op.get(event, 'location')
                                P= op.get(event, ['saal-location', lang + '-name'])    
                            
                            if op.get(event, ['sales-status'])
                                .col-xs-5.col-md-5.col-lg-5.text-right
                                    a.btn.btn-primary(target='_blank' class=(op.get(event, 'sales-status') == 'sold_out' ? "disabled" : "") href=op.get(event, 'ticket-api'))= t('button.buy_ticket.' + op.get(event, 'sales-status'))

                            .col-xs-12.col-md-12.col-lg-12
                                hr                  
                    
                if past_events.length
                    .past
                        h2= t('title.past')
                        .row
                            each event in past_events
                                .col-md-3
                                    p= (moment(op.get(event, ['start-time'])).locale(lang).format('L'))
                                .col-md-8
                                    p= op.get(event, 'location')    
                                .col-md-12
                                    hr
    
        .row.page-margin
            if op.get(performance, 'audio')
                div.col-xs-12.col-md-6
                    h2= t('title.sound')
                    div!= op.get(performance, 'audio')
            if op.get(performance, 'video')
                div.col-xs-12.col-md-6
                    h2= t('title.video')
                    div!= op.get(performance, 'video')

        .row.page-margin
                .col-md-6
                    
                    if op.get(performance, 'photos')
                        .gallery
                            h2= t('title.gallery')
                            .row
                                each photo in op.get(performance, 'photos', [])
                                    .single-image.col-xs-6.col-sm-3.col-md-4
                                          a.fancybox(rel='gallery' href=''+ photo-big.file + '')
                                            img(src=''+ photo-medium.file +'' class='img-responsive')

                .col-md-6
                  if coverage.length
                      .press
                          h2= t('title.press')
                          .row
                              each press in coverage
                                  .col-md-12.h3
                                      a(target='_blank' href='' + press.url + '')= (moment(press.date).locale(lang).format('L')) + " " + press.source + ": " + press.title

                                  .col-xs-12.col-md-12
                                      hr
